#summary Wiki page for using when we do code sprints

<wiki:toc max_depth="2" />

= 14 march 2009 =

== Why is update_file_items being called twice? ==

{{{
DEBUG	nautilussvn.lib.extensions.nautilus	update_file_info() called for /home/bruce/Development/nautilussvn/trunk
DEBUG	nautilussvn.lib.extensions.nautilus	update_file_info() called for /home/bruce/Development/nautilussvn/trunk
}}}

A: It's not, the logger is doing this. Why?

Why? Because it uses addHandler and everytime a Log instance is created addHandler is called which just adds to the handler that is already there.

The logger seems a little too complicated, can't we do something simpler? Yes, we want a file log and a console log, and yes the logging module is cool, but this is too much code.

Replaced locally temporarily with just:

{{{
import logging
logging.basicConfig(level=logging.DEBUG)

class Log():
    
    def __init__(self, module):
        self.module = module
        
    def debug(self, message):
        print "DEBUG: %s: %s" % (self.module, message)
}}}

== Everything with Popen and shell=true needs to go ==
Won't handle spaces, quotes, etc. properly. Use (example):

{{{
Popen(["nautilus", "--no-desktop", "--browser", os.path.dirname(os.path.abspath(path))]).pid
}}}

Instead of:
{{{
subprocess.Popen(
    "nautilus --no-desktop --browser %s" % 
    os.path.dirname(os.path.abspath(path)), 
    shell=True
)

}}}